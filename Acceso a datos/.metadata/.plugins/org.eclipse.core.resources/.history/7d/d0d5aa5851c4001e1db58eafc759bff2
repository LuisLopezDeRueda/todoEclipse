package ceu.dam.javafx.practica3.pantallasServices;

import java.util.ArrayList;
import java.util.List;

import ceu.dam.javafx.practica3.AppController;
import ceu.dam.javafx.practica3.modelo.Animal;
import ceu.dam.javafx.practica3.service.AnimalesServices;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.concurrent.Task;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.CheckBox;
import javafx.scene.control.ProgressBar;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.effect.BoxBlur;
import javafx.scene.layout.AnchorPane;

public class ConsultaService extends AppController {
	@FXML
	private TextField tfConsultar;
	@FXML
	private Button consultar;
	@FXML
	private TableView<Animal> tabla;

	private ObservableList<Animal> lista;

	@FXML
	private TableColumn<Animal, String> tipo;

	@FXML
	private TableColumn<Animal, Integer> edad;

	@FXML
	private TableColumn<Animal, String> nombre;

	@FXML
	private ProgressBar consultarBar;
	@FXML
	private Button nuevo;
	@FXML
	private CheckBox claro;
	@FXML
	private CheckBox oscuro;
	@FXML
	private AnchorPane panel;

	@FXML
	public void oscuro() {
		claro.setSelected(false);
		panel.getStylesheets().add("/ceu/dam/javafx/practica3/gui/dark-theme.css");
	}

	@FXML
	public void claro() {
		oscuro.setSelected(false);
		panel.getStylesheets().clear();
	}

	@FXML
	public void initialize() {
		tipo.setCellValueFactory(new PropertyValueFactory<Animal, String>("tipo"));
		edad.setCellValueFactory(new PropertyValueFactory<Animal, Integer>("edad"));
		nombre.setCellValueFactory(new PropertyValueFactory<Animal, String>("nombre"));

		lista = FXCollections.observableArrayList();
		tabla.setItems(lista);
	}

	public void consultarAlta2(String tipo) {
		tfConsultar.setText(tipo);
		consultar();
	}

	public void consultar() {
		lista.setAll(new ArrayList<Animal>());
		tabla.setEffect(new BoxBlur());
		Task<Void> task = new Task<Void>() {

			List<Animal> listaAnimales;

			@Override
			protected Void call() throws Exception {
				listaAnimales = new AnimalesServices().consultarAnimales(tfConsultar.getText());
				return null;
			}

			@Override
			protected void succeeded() {
				tabla.setEffect(null);
				super.succeeded();
				updateProgress(100, 100);
				lista.addAll(listaAnimales);
				tabla.setOpacity(1.0);
			}

			@Override
			protected void failed() {
				super.failed();
				updateProgress(100, 100);
				alet("Datos no encontrados");
			}

		};
		new Thread(task).start();
		consultarBar.progressProperty().bind(task.progressProperty());
	}

	public void irAlta() {
		cambiarAlta();
	}
}
